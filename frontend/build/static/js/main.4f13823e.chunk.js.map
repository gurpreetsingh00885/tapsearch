{"version":3,"sources":["components/Home.jsx","components/Index.jsx","components/Search.jsx","components/SearchResult.jsx","components/NotFound.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","state","showModal","clearing","done","handleModalClose","setState","clear","axios","post","then","response","console","log","catch","error","style","width","height","display","alignItems","justifyContent","padding","Button","variant","size","maxWidth","margin","onClick","props","history","push","Modal","show","this","onHide","Header","closeButton","Title","Body","Footer","disabled","Spinner","as","animation","role","Toast","position","top","left","right","onClose","delay","autohide","className","Component","Index","text","working","onTextChange","evt","target","value","hitAPI","fontSize","Form","Control","type","id","placeholder","maxHeight","onKeyDown","event","key","rows","onChange","marginTop","borderRadius","Search","document","getElementById","search","flexDirection","InputGroup","Prepend","Text","icon","faSearch","FormControl","aria-label","aria-describedby","Append","word","match","params","searching","data","paragraphs","overflow","background","bottom","ListGroup","map","paragraph","index","Item","textOverflow","length","NotFound","App","exact","path","component","render","SearchResult","Boolean","window","location","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4f13823e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Toast from 'react-bootstrap/Toast';\nimport axios from 'axios';\n\nclass Home extends Component {\n  state = { showModal : false, clearing: false, done: false};\n\n  handleModalClose = () => {\n    this.setState({ showModal: false });\n  }\n\n  clear = () => {\n    this.setState({ clearing: true }, () => {\n      axios.post('/api/clear/')\n      .then((response) => {\n        this.setState({clearing: false, done: true, showModal: false})\n        console.log(response);\n      })\n      .catch((error) => {\n        this.setState({clearing: false, showModal: false, done: true})\n        console.log(error);\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div style={{ width: '100%', height: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', padding: 8 }}>\n        <center>\n          <h1> TapSearch </h1>\n          A tool for inverted paragraph-word indexing.\n          <br/><br/>\n          <h3>\n            What do you want to do?\n          </h3> <br/>\n          <Button\n            variant=\"outline-primary\"\n            size=\"lg\"\n            style={{\n              display : \"block\",\n              width: '80%',\n              height: 80,\n              maxWidth : 500,\n              margin : 20\n            }}\n            onClick={() => this.props.history.push('/index')}\n          >\n            Index\n          </Button>\n          <Button\n            variant=\"outline-success\"\n            size=\"lg\"\n            style={{\n              display : \"block\",\n              width: '80%',\n              height: 80,\n              maxWidth : 500,\n              margin : 20\n            }}\n            onClick={() => this.props.history.push('/search')}\n          > \n            Search\n          </Button>\n          <Button\n            variant=\"outline-danger\"\n            size=\"lg\"\n            style={{\n              display : \"block\",\n              width: '80%',\n              height: 80,\n              maxWidth : 500,\n              margin : 20\n            }}\n            onClick={() => this.setState({ showModal: true })}\n          > \n            Clear\n          </Button>\n        </center>\n        <Modal show={this.state.showModal} onHide={this.handleModalClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Woahhh!</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>You're about to clear every paragraph and word from the index.</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" disabled={this.state.clearing} onClick={this.handleModalClose}>\n            Cancel\n          </Button>\n          \n\n          {this.state.clearing &&\n            <Button variant=\"danger\" disabled style={{ height: 37, width: 99}}>\n              <Spinner\n                as=\"span\"\n                animation=\"border\"\n                size=\"sm\"\n                role=\"status\"\n              />\n          </Button>\n          }\n          {!this.state.clearing &&\n            <Button variant=\"danger\" onClick={this.clear}>\n              Go Ahead\n            </Button>\n          }\n        </Modal.Footer>\n      </Modal>\n        <Toast style={{ position: 'absolute', top: 30, left: 0, right: 0, margin: 'auto'}} onClose={() => this.setState({done: false})} show={this.state.done} delay={3000} autohide>\n          <Toast.Header>\n            <strong className=\"mr-auto\">Done!</strong>\n          </Toast.Header>\n          <Toast.Body>Everything has been erased</Toast.Body>\n        </Toast>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Toast from 'react-bootstrap/Toast';\nimport Spinner from 'react-bootstrap/Spinner';\nimport axios from 'axios';\n\nclass Index extends Component {\n  state = {\n    text: '',\n    working: false,\n    done: false,\n  }\n\n  onTextChange = evt => {\n    this.setState({text: evt.target.value});\n  }\n\n  hitAPI = () => {\n    this.setState({ working: true });\n    axios.post('/api/index/', {\n        text: this.state.text\n      })\n      .then((response) => {\n        this.setState({working: false, done: true})\n        console.log(response);\n      })\n      .catch((error) => {\n        this.setState({working: false})\n        console.log(error);\n      });\n  }\n\n  render() {\n\n    const onKeyDown = (event: React.KeyboardEvent<HTMLDivElement>): void => {\n      if (event.key === 'Enter' && !this.state.text === '') {\n        this.hitAPI();\n      }\n    }\n    return (\n      <div style = {{ padding: 20, fontSize: 24, width: '100%', height: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n        <center>\n          You can enter the text you want to index below<br/><br/>\n          <Form.Control size=\"lg\" as=\"textarea\" type=\"textarea\" id=\"text\" placeholder=\"Text goes here\" style={{ height: '50%', maxHeight: 600, maxWidth: 1000 }} onKeyDown={onKeyDown} rows=\"10\" onChange={this.onTextChange}/>\n          {this.state.working &&\n            <Button variant=\"primary\" disabled style={{ marginTop: 20, width: '100%', height: 49}}>\n            <Spinner\n              as=\"span\"\n              animation=\"border\"\n              size=\"sm\"\n              role=\"status\"\n            />\n            <span className=\"sr-only\">Loading...</span>\n          </Button>\n          }\n          {!this.state.working &&\n            <Button variant=\"primary\" size=\"lg\" onClick = {this.hitAPI} disabled={this.state.text === '' || this.state.working} style={{ marginTop: 20, width: '100%'}}>Index</Button>\n          }\n        </center>\n        <Button variant=\"outline-primary\" size=\"lg\" onClick = {() => this.props.history.push('/')} style={{ position: 'absolute', height: 60, width: 60, top: 10, left: 10, borderRadius: 50}}>&lt;</Button>\n        <Toast style={{ position: 'absolute', top: 30, left: 0, right: 0, margin: 'auto'}} onClose={() => this.setState({done: false})} show={this.state.done} delay={3000} autohide>\n          <Toast.Header>\n            <strong className=\"mr-auto\">Done!</strong>\n          </Toast.Header>\n          <Toast.Body>Your text has been processed successfully.</Toast.Body>\n        </Toast>\n      </div>\n    );\n  }\n}\n\nexport default Index;\n","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\n\nclass Search extends Component {\n  state = {\n    text: \"\"\n  }\n\n  onTextChange = evt => {\n    var text = document.getElementById('text').value;\n    this.setState({ text  });\n  }\n\n  search = evt => {\n    this.props.history.push(`/search/${this.state.text}`, {key: this.state.text});\n  }\n\n  render() {\n\n    const onKeyDown = (event: React.KeyboardEvent<HTMLDivElement>): void => {\n      if (event.key === 'Enter' && this.state.text !== '') {\n        this.search();\n      }\n    }\n\n    return (\n      <div style = {{ padding: 20, width: '100%', height: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column' }}>\n          <h1> TapSearch </h1>\n          <InputGroup size=\"lg\" className=\"mb-3\" style={{ maxWidth: 600, marginTop: 60 }}>\n            <InputGroup.Prepend>\n              <InputGroup.Text id=\"inputGroup-sizing-lg\"><FontAwesomeIcon icon={faSearch} /></InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl\n              placeholder=\"Word\"\n              aria-label=\"Word\"\n              aria-describedby=\"basic-addon2\"\n              id=\"text\"\n              onChange={this.onTextChange}\n              onKeyDown={onKeyDown}\n            />\n            <InputGroup.Append>\n              <Button variant=\"outline-secondary\" disabled={this.state.text === \"\"} onClick={this.search}>Go</Button>\n            </InputGroup.Append>\n          </InputGroup>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Spinner from 'react-bootstrap/Spinner';\nimport axios from 'axios';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    var word = this.props.match.params.word;\n    this.state = { text: word, searching: true, data: [] };\n  }\n\n  onTextChange = evt => {\n    var text = document.getElementById('text').value;\n    this.setState({ text  });\n  }\n\n  search = evt => {\n    this.props.history.push(`/search/${this.state.text}`, {key: this.state.text});\n  }\n\n  componentDidMount() {\n    axios.post('/api/search/', {\n        word: this.state.text\n      })\n      .then((response) => {\n        this.setState({searching: false, data: response.data.paragraphs});\n        console.log(response.data);\n      })\n      .catch((error) => {\n        this.setState({searching: false})\n        console.log(error);\n      });\n  }\n\n  render() {\n\n    const onKeyDown = (event: React.KeyboardEvent<HTMLDivElement>): void => {\n      if (event.key === 'Enter' && this.state.text !== '') {\n        this.search();\n      }\n    }\n\n    return (\n      <div>\n        <div style = {{ padding: 20, width: '100%', height: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column', position: 'absolute', overflow: 'auto'}}>\n          <h1> TapSearch </h1>\n          <InputGroup size=\"lg\" className=\"mb-3\" style={{ marginTop: 30, maxWidth: 600 }}>\n            <InputGroup.Prepend>\n              <InputGroup.Text id=\"inputGroup-sizing-lg\"><FontAwesomeIcon icon={faSearch} /></InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl\n              placeholder=\"Word\"\n              aria-label=\"Word\"\n              aria-describedby=\"basic-addon2\"\n              id=\"text\"\n              onChange={this.onTextChange}\n              onKeyDown={onKeyDown}\n              value={this.state.text}\n            />\n            <InputGroup.Append>\n              <Button variant=\"outline-secondary\" disabled={this.state.text===\"\"} onClick={this.search}>Go</Button>\n            </InputGroup.Append>\n          </InputGroup>\n          <div style={{ background: '', height: '100%', width: '100%', maxWidth: 600, marginTop: 40}}>\n            {\n              this.state.searching &&\n              <Spinner style={{position: 'absolute', left: 0, right: 0, margin: 'auto', top: 0, bottom: 0}} animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n              </Spinner>\n            }\n            { !this.state.searching &&\n              <div>\n                <b>Results</b><br/><br/>\n                <ListGroup>\n                  {\n                    this.state.data.map(\n                      (paragraph, index) => (\n                        <ListGroup.Item style={{textOverflow: 'ellipsis'}} key={index}>\n                          <b> Document {index+1} </b><br/>\n                          {paragraph}\n                        </ListGroup.Item>\n                      )\n                    )\n                  }\n                </ListGroup>\n              </div>\n            }\n            { this.state.data.length === 0 &&\n              <div>\n                <h4> Nothing Found </h4>\n              </div>\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React from 'react';\n\n\nconst NotFound = () => {\n  return (\n    <div>\n      <center>\n        <h2> Not Found </h2>\n        <p> The page you're looking for does not exists. </p>\n      </center>\n    </div>\n  );\n}\n\nexport default NotFound\n","import React, { Component } from 'react';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\nimport Home from \"./components/Home\";\nimport Index from \"./components/Index\";\nimport Search from \"./components/Search\";\nimport SearchResult from \"./components/SearchResult\";\nimport NotFound from \"./components/NotFound\";\nimport './styles.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/index\" component={Index} />\n          <Route exact path=\"/search/:word\" render={(props) => (\n  <SearchResult key={props.match.params.word} {...props} />)} />\n          <Route exact path=\"/search\" component={Search} />\n          <Route exact component={NotFound} />\n      </Switch>\n    </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}